
x : Type
x =
  let
    a0 : Type
    a1 : Type
    a2 : Type
    a3 : Type
    a4 : Type
    a5 : Type
    a6 : Type
    a7 : Type
    a8 : Type
    a9 : Type
    a0 = a1
    a1 = a2
    a2 = a3
    a3 = a4
    a4 = a5
    a5 = a6
    a6 = a7
    a7 = a8
    a8 = a9
    a9 = Type
    b0 : Type
    b1 : Type
    b2 : Type
    b3 : Type
    b4 : Type
    b5 : Type
    b6 : Type
    b7 : Type
    b8 : Type
    b9 : Type
    b0 = b1
    b1 = b2
    b2 = b3
    b3 = b4
    b4 = b5
    b5 = b6
    b6 = b7
    b7 = b8
    b8 = b9
    b9 = a0
    c0 : Type
    c1 : Type
    c2 : Type
    c3 : Type
    c4 : Type
    c5 : Type
    c6 : Type
    c7 : Type
    c8 : Type
    c9 : Type
    c0 = c1
    c1 = c2
    c2 = c3
    c3 = c4
    c4 = c5
    c5 = c6
    c6 = c7
    c7 = c8
    c8 = c9
    c9 = b0
    d0 : Type
    d1 : Type
    d2 : Type
    d3 : Type
    d4 : Type
    d5 : Type
    d6 : Type
    d7 : Type
    d8 : Type
    d9 : Type
    d0 = d1
    d1 = d2
    d2 = d3
    d3 = d4
    d4 = d5
    d5 = d6
    d6 = d7
    d7 = d8
    d8 = d9
    d9 = c0
    e0 : Type
    e1 : Type
    e2 : Type
    e3 : Type
    e4 : Type
    e5 : Type
    e6 : Type
    e7 : Type
    e8 : Type
    e9 : Type
    e0 = e1
    e1 = e2
    e2 = e3
    e3 = e4
    e4 = e5
    e5 = e6
    e6 = e7
    e7 = e8
    e8 = e9
    e9 = d0
  in
  e9

data Equals forall a. (x y : a) where
  Refl : Equals x x

test : Equals x Type
test = Refl
